# Generated by Django 5.2 on 2025-07-13 09:08

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Season',
                'verbose_name_plural': 'Seasons',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('mission_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('seasonal', 'Seasonal')], max_length=20)),
                ('unit', models.CharField(choices=[('steps', 'Steps'), ('minutes_in_game', 'Minutes in Game'), ('pushups', 'Pushups'), ('quests_completed', 'Quests Completed'), ('xp_gained', 'XP Gained'), ('skills_unlocked', 'Skills Unlocked'), ('layers_completed', 'Layers Completed'), ('social_interactions', 'Social Interactions'), ('workout_sessions', 'Workout Sessions'), ('meditation_minutes', 'Meditation Minutes'), ('hacking_attempts', 'Hacking Attempts'), ('cyber_quests', 'Cyber Quests'), ('real_world_activities', 'Real World Activities')], max_length=30)),
                ('target_value', models.PositiveIntegerField(help_text='Zielwert für die Mission', validators=[django.core.validators.MinValueValidator(1)])),
                ('xp_reward', models.PositiveIntegerField(default=0, help_text='XP-Belohnung')),
                ('gold_reward', models.PositiveIntegerField(default=0, help_text='Gold-Belohnung')),
                ('ultra_point_reward', models.PositiveIntegerField(default=0, help_text='Ultra-Point-Belohnung')),
                ('start_time', models.DateTimeField(blank=True, help_text='Startzeit der Mission', null=True)),
                ('end_time', models.DateTimeField(blank=True, help_text='Endzeit der Mission', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('season', models.ForeignKey(blank=True, help_text='Season für saisonale Missionen', null=True, on_delete=django.db.models.deletion.CASCADE, to='missions.season')),
            ],
            options={
                'verbose_name': 'Mission',
                'verbose_name_plural': 'Missions',
                'ordering': ['mission_type', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='MissionProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_value', models.PositiveIntegerField(default=0)),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='missions.mission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mission_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Mission Progress',
                'verbose_name_plural': 'Mission Progress',
                'ordering': ['-updated_at'],
                'unique_together': {('user', 'mission')},
            },
        ),
    ]
